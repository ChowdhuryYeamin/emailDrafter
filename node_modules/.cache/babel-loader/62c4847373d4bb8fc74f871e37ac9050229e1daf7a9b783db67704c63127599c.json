{"ast":null,"code":"var _jsxFileName = \"/Users/yaminayon/Desktop/i4software/emailDrafter/email-drafting-assistant/src/EmailTypeSelect.js\";\n// EmailTypeSelect.js\n\nimport React from 'react';\n\n// This is a functional component that displays a dropdown menu for the user to select the type of email they're writing.\n// It takes two props: value (the current selected email type) and handleChange (a function to run when the selection changes).\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailTypeSelect = ({\n  value,\n  handleChange\n}) => /*#__PURE__*/_jsxDEV(\"select\", {\n  value: value,\n  onChange: handleChange,\n  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n    value: \"Business\",\n    children: \"Business\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n    value: \"Personal\",\n    children: \"Personal\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n    value: \"Support\",\n    children: \"Support\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), \"// Add more email types as needed.\"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n_c = EmailTypeSelect;\nexport default EmailTypeSelect;\nvar _c;\n$RefreshReg$(_c, \"EmailTypeSelect\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","EmailTypeSelect","value","handleChange","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yaminayon/Desktop/i4software/emailDrafter/email-drafting-assistant/src/EmailTypeSelect.js"],"sourcesContent":["// EmailTypeSelect.js\n\nimport React from 'react';\n\n// This is a functional component that displays a dropdown menu for the user to select the type of email they're writing.\n// It takes two props: value (the current selected email type) and handleChange (a function to run when the selection changes).\nconst EmailTypeSelect = ({ value, handleChange }) => (\n  <select value={value} onChange={handleChange}>\n    <option value=\"Business\">Business</option>\n    <option value=\"Personal\">Personal</option>\n    <option value=\"Support\">Support</option>\n    // Add more email types as needed.\n  </select>\n);\n\nexport default EmailTypeSelect;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,kBAC9CH,OAAA;EAAQE,KAAK,EAAEA,KAAM;EAACE,QAAQ,EAAED,YAAa;EAAAE,QAAA,gBAC3CL,OAAA;IAAQE,KAAK,EAAC,UAAU;IAAAG,QAAA,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,eAC1CT,OAAA;IAAQE,KAAK,EAAC,UAAU;IAAAG,QAAA,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,eAC1CT,OAAA;IAAQE,KAAK,EAAC,SAAS;IAAAG,QAAA,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,sCAE1C;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAQ,CACT;AAACC,EAAA,GAPIT,eAAe;AASrB,eAAeA,eAAe;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}